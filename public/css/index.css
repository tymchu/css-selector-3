/* Завдання №1.

- Для h1 тега: Замініть колір тексту на зелений.
- Для p тега: Зробіть колір заливки тексту червоним
- Для button тега: Зробіть штрихи тексту в 1px з кольором #000

Увага!!! Звертайте увагу на те, що є клас "task_1", використовуйте його як Селектор нащадка для тегів , щоб у вас все
 коректно працювало
--> */

.task_1 h1 {
  color: green;
}

.task_1 p {
  background: red;
}

.task_1 button {
  font-size: 1px;
  color: #000;
}

/* Завдання №2.

- Для h1 тега: Змініть напрям тексту на "rtl" (справа наліво).
- Для p тега: Змініть вирівнювання тексту на праворуч
- Для button тега: Змініть регістр тексту кнопки, використовуючи властивість регістра тексту.

Увага!!! Звертайте увагу на те, що є клас "task_2", використовуйте його як Селектор нащадка для тегів, щоб у вас все
коректно працювало. */

.task_2 h1 {
  direction: rtl;
}

.task_2 p {
  text-align: right;
}

.task_2 button {
  text-transform: uppercase;
}

/* Завдання №3.

- Для h1 тега: Зробіть текст вертикальним, використовуючи властивість орієнтації тексту.
- Для pre тега: Застосуйте властивість ширини табуляції і змініть розмір табуляції на 4.
- Для button тега:
1) Збільште проміжок між літерами на 2px для тексту кнопки.
2) Застосуйте властивість декорації тексту до тексту кнопки, зробіть його підкресленим

Увага!!! Звертайте увагу на те, що є клас "task_3", використовуйте його як Селектор нащадка для тегів, щоб у вас все
коректно працювало. */

.task_3 h1 {
  writing-mode: vertical-lr;
}

.task_3 pre {
  tab-size: 4;
}

.task_3 button {
  letter-spacing: 2px;
  text-decoration: underline;
}

/* Завдання № 4.

- Для h1 тега:
	1) Збільште розмір шрифту заголовка до 50 пікселів.
	2) Змініть стиль шрифту на "italic".

- Для p тега:
    1) Під'єднайте шрифт 'Open Sans' (Bold 700) з Google Fonts в проєкт. (підключайте через тег <link> в default.hbs)
    2) Змініть шрифт на 'Open Sans'.
    3) Зробіть прогрузку шрифту так, щоб Браузер повинен замінити на більш схожий шрифт до того моменту,
     поки заданий шрифт не буде завантажений.(swap)
	4) Зробіть шрифт жирним (700)


Увага!!! Звертайте увагу на те, що є клас "task_4", використовуйте його як Селектор нащадка для тегів, щоб у вас все
коректно працювало. */

.task_4 h1 {
  font-size: 50;
  font-style: italic;
}

.task_4 p {
  font-family: 'Open Sans';
  font-display: swap;
  font-weight: 700;
}

/* Завдання № 5.

- Для тега div:
1) Зробіть зовнішній відступ 10px.
2) Зробіть ширину та висоту по 100px.
3) Зробіть фон червоний

- Для тега button:
1) Зробіть внутрішні та зовнішні відступи по 10px.
2) Застосуйте властивість розмір коробки, щоб розміри кнопки включав лише його вміст, не враховуючи внутрішні відступи.

- Для тега input:
1) Зробіть мінімальну ширину 150px.
2) Зробіть мінімальну висоту 45px.
3) Зробіть максимальну ширину 300px.
4) Зробіть максимальну висоту 60px.
5) Зробіть фон сірий.

- Для p тега:
1) Сховайте цей елемент за допомогою властивості відображення

Увага!!! Звертайте увагу на те, що є клас "task_5", використовуйте його як Селектор нащадка для тегів, щоб у вас все
коректно працювало. */

.task_5 div {
  margin: 10px;
  width: 100px;
  height: 100px;
  background: red;
}

.task_5 button {
  margin: 10px;
  padding: 10px;
  box-sizing: border-box;
}
.task_5 input {
  min-width: 150px;
  min-height: 45px;
  max-width: 300px;
  max-height: 60px;
  background: grey;
}
.task_5 p {
  display: none;
}

/* Завдання № 6.

- Для тега h1:
1) Зробіть зовнішню рамку товщиною 3 пікселі, подвійною лінією, синій колір
2) Зробіть зсув зовнішньої рамки на 10px.

- Для тега div:
1) Зробіть внутрішню рамку товщиною 3 пікселі, пунктирною лінією, червоного кольору 

- Для тега button:
1) Зробіть радіус закруглення рамки 25px.
2) Задайте тінь тексту на елементі зі зміщенням вправо на 2px, вниз на 2px, розмиття 10px та колір тіні #888888. */

.task_6 h1 {
  outline: 3px double blue;
  outline-offset: 10px;
}
.task_6 div {
  border: 3px dashed red;
}
.task_6 button {
  border-radius: 25px;
  box-shadow: 2px 2px 10px #888888;
}

/* Завдання № 7.

- Для тега button:
1) Зробіть тінь блоку зі зміщенням вправо на 2px, вниз на 2px, розмиванням 5px, поширення 10px та кольором #666666.
2) Зробіть висоту рядка елементу зі значенням 2.

- Для тега strong:
1) Зробіть вертикальне вирівнювання по верхньому краю свого батьківського елемента (top).
2) Зробіть курсор, який вказує на те, що програма зайнята. (wait) */

.task_7 button {
  box-shadow: 2px 2px 5px 10px #666666;
  line-height: 2;
}
.task_7 strong {
  vertical-align: top;
  cursor: progress;
}

/* Завдання № 8.

- Для тега div:
 1) Зробіть елемент невидимим;

- Для тега p:
 1) Зробіть максимальну висоту 70px.
 2) Зробіть обрізання блоку, з смужкою прокрутки;

- Для тега h1:
 1) Зробіть максимальну висоту 50px.
 2) Зробіть обрізання блоку, якщо контент елемента не вміщується;
 3) Забороніть перенесення рядків.(nowrap)
 4) Зробіть так, щоб текст, який не поміщається в елемент, з'являвся в кінці з трьома крапками; */

.task_8 div {
  visibility: none;
}
.task_8 p {
  max-height: 70px;
  overflow: scroll;
}
.task_8 h1 {
  max-height: 50px;
  overflow-y: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

/* Завдання № 9.


- Для тега h1:
    1) Встановіть значення властивості, яке не дозволяє словам переноситися на новий рядок, якщо вони не поміщаються в один рядок.
    2) Збільшити відстань між словами на 30px.
- Для тега div:
    1) Зробіть перенесення слова за допомогою символу (&shy;).
- Для тега p:
    1) Встановіть значення властивості, яке дозволяє словам переноситися на новий рядок, якщо вони не поміщаються в один рядок, і розділяти їх по буквах;
- Для тега textarea:
    1) Сховайте змінювання розміру елемента за допомогою миші. */

.task_9 h1 {
  word-break: keep-all;
  word-spacing: 30px;
}
.task_9 div {
  hyphens: manual;
}
.task_9 p {
  word-break: break-all;
}
.task_9 textarea {
  resize: both;
}
